# -*- mode: ruby -*-
# vi: set ft=ruby :

# Since the webserver needs the IP of the DB server the two have to be started 
# in the right order and with storing the IP of the latter on the way:
#
# $ rm db_ip.txt | vagrant up | python store_ip.py

$ip_file = "db_ip.txt"

Vagrant.configure("2") do |config|
    config.vm.box = 'digital_ocean'
    config.vm.box_url = "https://github.com/devopsgroup-io/vagrant-digitalocean/raw/master/box/digital_ocean.box"
    config.ssh.private_key_path = '~/.ssh/id_rsa'
    config.vm.synced_folder ".", "/vagrant", type: "rsync"
  
    config.vm.define "minitwit3", primary: true do |server|
      server.vm.provider :digital_ocean do |provider|
        provider.ssh_key_name = ENV["SSH_KEY_NAME"]
        provider.token = ENV["DIGITAL_OCEAN_TOKEN"]
        provider.image = 'ubuntu-18-04-x64'
        provider.region = 'fra1'
        provider.size = 's-1vcpu-1gb'
        provider.privatenetworking = true
      end
  
      server.vm.hostname = "minitwit3"

      server.trigger.after :up do |trigger|
        trigger.info =  "Writing minitwit's IP to file.."
        trigger.ruby do |env,machine|
          remote_ip = machine.instance_variable_get(:@communicator).instance_variable_get(:@connection_ssh_info)[:host]
          File.write($ip_file, remote_ip)
        end 
      end

      server.vm.provision "shell", inline: <<-SHELL
        echo "Updatingg"
        sudo apt update
        sudo apt upgrade

        #Setting up dotnet in order to fix certificadd59a54f7a3ece4549131d5343f97e9ec708d698bc0fe4c51c287e09c4aa2956te for asp.net        
        sudo apt-get install -y apt-transport-https
        snap install dotnet-sdk --classic

        #Setting up certificate for asp.net
        dotnet dev-certs https -ep ${HOME}/.aspnet/https/Minitwit_BE.Api.pfx -p toonage15
        dotnet dev-certs https --trust

        #copying files to the droplet
        cp -r /vagrant/* $HOME

        #Docker installation
        sudo apt install apt-transport-https ca-certificates curl software-properties-common

        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

        sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"

        apt-cache policy docker-ce

        #there is a bug with this command, you have to run it twice, for some reason it fails the first time
        sudo apt install docker-ce -y
        

        #setting up docker-compose
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose

        docker-compose up -d
        
      SHELL
    end

  end